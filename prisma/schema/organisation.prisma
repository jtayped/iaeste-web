model Invitation {
    id String @id @default(cuid())

    userId String
    user   User   @relation("InvitationsReceived", fields: [userId], references: [id], onDelete: Cascade)

    state InvitationState @default(PENDING)

    senderId String
    sender   User   @relation("InvitationsSent", fields: [senderId], references: [id])

    expires DateTime

    notificationsSent Notification[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Request {
    id String @id @default(cuid())

    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    state RequestState @default(PENDING)

    notificationsSent Notification[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum InvitationState {
    PENDING
    REJECTED
    CANCELLED
    ACCEPTED
    EXPIRED
}

enum RequestState {
    PENDING
    REJECTED
    CANCELLED
    ACCEPTED
}
