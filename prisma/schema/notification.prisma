model Notification {
    id String @id @default(uuid())

    type NotificationType
    seen Boolean          @default(false)
    href String?

    senderId String?
    sender   User?   @relation("NotificationsSent", fields: [senderId], references: [id])

    receiverId String
    receiver   User   @relation("NotificationsReceived", fields: [receiverId], references: [id], onDelete: Cascade)

    groupId String?
    group   Group?  @relation(fields: [groupId], references: [id])

    reunionId String?
    reunion   Reunion? @relation(fields: [reunionId], references: [id])

    requestId String?
    request   Request? @relation(fields: [requestId], references: [id])

    inviteId String?
    invite   Invitation? @relation(fields: [inviteId], references: [id])

    createdAt DateTime @default(now())
}

enum NotificationType {
    ORGANISATION_INVITE_ACCEPTED
    ORGANISATION_INVITE_REJECTED
    ORGANISATION_REQUEST

    GROUP_INVITE
    GROUP_INVITE_ACCEPTED
    GROUP_INVITE_REJECTED
    GROUP_INVITE_CANCELLED
    GROUP_KICKED

    REUNION_INVITE
    REUNION_INVITE_REJECTED
    REUNION_EDITED
    REUNION_DELETED
}
